// 前端是无法直接读取文件 操作文件 （node是使用在服务端的）
// 对文件和前端传递的数据进行处理
// 进制数据 所有内容都是以2进制来存储的, 数据都是以2进制形式来表现的 
// 最终数据都是以2进制来存储的 所以会出现不精准的情况 
// 二进制  十进制的区别 10进制中最大的是9  2进制中最大的时候 1
// 我们以字节为单位来存储数据  8位 -> 1个字节  1024个字节 -> 1k   1024k -> 1m


// 转10进制
// 2进制转10进制各位最大值相加或者2^8 - 1(2**8-1)
// let sum = 0;
// for (let i = 0; i < 8; i++) {
//     sum += Math.pow(2, i)
// }
// console.log(sum); // 255  每个字节最大时255
// 把任意进制转化成10进制
// console.log(parseInt('101', 2))


// 转2进制
// 取余数倒着读 就可以获取对应的进制

// 任意进制间相互转换
// console.log((0x64).toString(2)); // 字符串 0b 二进制 0x 16进制


// 小数也要转化成2进制 => 乘2取整法可以将一个小数 转化成2进制数

// 0.1 * 2 = 0.2  0
// 0.2 * 2 = 0.4  0
// 0.4 * 2 = 0.8  0
// 0.8 * 2 = 1.6  1
// 0.6 * 2 = 1.2  1
// console.log(0.1 + 0.2); // 0.30000000000000004

// 那如果出现了精度问题你要如何解决？ 
// js是没有 把小数转化成2进制的方法 可以利用现成的库