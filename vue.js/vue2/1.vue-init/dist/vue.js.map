{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\n\r\nexport function isObject(val) {\r\n    return typeof val == 'object' && val !== null\r\n\r\n}","let oldArrayPrototype = Array.prototype\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n// arrayMethods.__proto__ = Array.prototype 继承\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method =>{\r\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\r\n    arrayMethods[method] = function (...args) { //  args 是参数列表 arr.push(1,2,3)\r\n        oldArrayPrototype[method].call(this,...args); // arr.push(1,2,3);\r\n        let inserted;\r\n        let ob = this.__ob__; // 根据当前数组获取到observer实例\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args ; // 就是新增的内容\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\r\n        // 更新操作.... todo...\r\n        if(inserted)  ob.observeArray(inserted)\r\n\r\n        // arr.push(1,2)\r\n        // arr.splice(0,1,xxxx)\r\n    }\r\n})\r\n","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n// 1.如果数据是对象 会将对象不停的递归 进行劫持\r\n// 2.如果是数组，会劫持数组的方法，并对数组中不是基本数据类型的进行检测\r\n\r\n// 检测数据变化 类有类型 ， 对象无类型\r\nclass Observer {\r\n    constructor(data) { // 对对象中的所有属性 进行劫持\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 不可枚举的\r\n        })\r\n        // data.__ob__ = this; // 所有被劫持过的属性都有__ob__ \r\n        if(Array.isArray(data)){\r\n            // 数组劫持的逻辑\r\n            // 对数组原来的方法进行改写， 切片编程  高阶函数\r\n            data.__proto__ = arrayMethods;\r\n            // 如果数组中的数据是对象类型，需要监控对象的变化\r\n            this.observeArray(data);\r\n        }else{\r\n            this.walk(data); //对象劫持的逻辑 \r\n        }\r\n    }\r\n    observeArray(data){ // 对我们数组的数组 和 数组中的对象再次劫持 递归了\r\n        // [{a:1},{b:2}]\r\n        data.forEach(item=>observe(item))\r\n    }\r\n    walk(data) { // 对象\r\n        Object.keys(data).forEach(key => { // Object.keys 只会遍历自身属性\r\n            defineReactive(data, key, data[key]);\r\n        })\r\n    }\r\n}\r\n// vue2 会对对象进行遍历 将每个属性 用defineProperty 重新定义 性能差\r\nfunction defineReactive(data,key,value){ // value有可能是对象\r\n    observe(value); // 本身用户默认值是对象套对象 需要递归处理 （性能差）\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            return value\r\n        },\r\n        set(newV){ \r\n            // todo... 更新视图\r\n            observe(newV); // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\r\n            value = newV;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 如果是对象才观测\r\n    if (!isObject(data)) {\r\n        return;\r\n    }\r\n    if(data.__ob__){\r\n        return;\r\n    }\r\n    // 默认最外层的data必须是一个对象\r\n    return new Observer(data)\r\n}","import { observe } from \"./observer/index\"; // node_resolve_plugin\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) { // 状态的初始化\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    // if(opts.computed){\r\n    //     initComputed();\r\n    // }\r\n    // if(opts.watch){\r\n    //     initWatch();\r\n    // }\r\n}\r\n\r\nfunction proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key];\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) { //\r\n    let data = vm.$options.data; // vm.$el  vue 内部会对属性检测如果是以$开头 不会进行代理\r\n    // vue2中会将data中的所有数据 进行数据劫持 Object.defineProperty\r\n\r\n    // 这个时候 vm 和 data没有任何关系, 通过_data 进行关联\r\n\r\n\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n    // 用户去vm.xxx => vm._data.xxx\r\n    for(let key in data){ // vm.name = 'xxx'  vm._data.name = 'xxx'\r\n        proxy(vm,'_data',key); \r\n    }\r\n\r\n    observe(data);\r\n}","import { initState } from \"./state\";\r\nexport function initMixin(Vue) { // 表示在vue的基础上做一次混合操作\r\n    Vue.prototype._init = function(options) {\r\n        // el,data\r\n        const vm = this; // var that = this;\r\n       \r\n        vm.$options = options; // 后面会对options进行扩展操作\r\n\r\n        // 对数据进行初始化 watch computed props data ...\r\n        initState(vm); // vm.$options.data  数据劫持\r\n\r\n    }\r\n}\r\n\r\n","import { initMixin } from \"./init\";\r\n\r\nfunction Vue(options){\r\n    // options 为用户传入的选项\r\n    this._init(options); // 初始化操作， 组件\r\n}\r\nexport default Vue;\r\n\r\n// 扩展原型的\r\ninitMixin(Vue);"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","proxy","source","newValue","_data","initMixin","Vue","_init","options"],"mappings":"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"}