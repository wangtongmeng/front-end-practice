{"version":3,"file":"runtime-dom.global.js","sources":["../../shared/src/index.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/h.ts","../src/nodeOps.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["export function isObject(val) {\n    return typeof val == 'object' && val !== null;\n}\n// ...\n\nexport function hasChanged(oldValue, newValue) {\n    return oldValue !== newValue\n}\n\nexport let isArray = Array.isArray;\n\nexport let extend = Object.assign;\nexport let isString = (val) => typeof val == 'string'\n\nexport const isIntegerKey = (key) => {\n    return parseInt(key) + '' === key\n}\nexport const isFunction = (v)=>typeof v == 'function'\n\nexport const hasOwn = (target, key) => Object.prototype.hasOwnProperty.call(target, key)\n\n// 用于组合  权限里面 有管理员权限，用户权限。可以使用这种方式实现权限的组合和校验\nexport const enum ShapeFlags {\n    ELEMENT = 1, // 标识是一个元素\n    FUNCTIONAL_COMPONENT = 1 << 1, // 函数组件\n    STATEFUL_COMPONENT = 1 << 2, // 带状态的组件\n    TEXT_CHILDREN = 1 << 3, // 这个组件的孩子是文本\n    ARRAY_CHILDREN = 1 << 4, // 孩子是数组\n    SLOTS_CHILDREN = 1 << 5, // 插槽孩子\n    TELEPORT = 1 << 6, // 传送门\n    SUSPENSE = 1 << 7, // 实现异步组件等待\n    COMPONENT_SHOULD_KEEP_ALIVE = 1 << 8, // 是否需要keep-alive\n    COMPONENT_KEPT_ALIVE = 1 << 9, // 组件的keep-alive\n    COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT\n}\n// 10:50继续\n\n// 按位或有一个是1 就是1\n// 100  \n// 010\n// 110\n// 按位与\n// const manager = 1<<1 // 2\n// const user = 1<<2 // 4\n// const order = 1<<3 // 8\n// const admin = manager | user\n// admin & order > 0 有权限\n// admin & order == 0 没权限\n// admin & user >  有权限","import { isArray, isIntegerKey } from \"@vue/shared\";\n\nexport function effect(fn, options: any = {}) {\n    const effect = createReactiveEffect(fn,options);\n    if(!options.lazy){\n        effect();\n    }\n    return effect; // 返回响应式的effect\n}   \nexport let activeEffect;\nconst effectStack = [];\nlet id = 0;\n\n// 当用户取值的时候需要将activeEffect 和 属性做关联\n// 当用户更改的时候 要通过属性找到effect重新执行\nfunction createReactiveEffect(fn,options){\n    const effect = function reactiveEffect(){ // 这就是effect中的effect\n        try{\n            effectStack.push(effect);\n            activeEffect = effect;\n            return fn(); // 会取值\n        }finally{\n            effectStack.pop();\n            activeEffect = effectStack[effectStack.length -1 ];\n        }\n    }\n    effect.id = id++; // 构建的是一个id\n    effect.__isEffect = true;\n    effect.options = options;\n    effect.deps = []; // effect用来收集依赖了那些属性\n    return effect;\n}\n// 一个属性对应多个effect， 一个effect还可以对应多个属性\n// target key = [effect,effect]\n\n// Map{\n//     {name:'zf',age:12}:{\n//         age:new Set(effect),\n//         name:new Set(effect),\n//     },\n// }\nconst targetMap = new WeakMap;\nexport function track(target,type,key){\n    if(activeEffect == undefined){\n        return; // 用户只是取了值，而且这个值不是在effect中使用的 ，什么都不用收集\n    }\n    let depsMap =  targetMap.get(target);\n    if(!depsMap) {\n        targetMap.set(target,(depsMap = new Map()))\n    }\n    let dep = depsMap.get(key);\n    if(!dep){\n        depsMap.set(key,( dep = new Set()))\n    }\n    if(!dep.has(activeEffect)){\n        dep.add(activeEffect)\n    }\n}\nexport function trigger(target,type,key,newValue?,oldValue?){\n    // 去映射表里找到属性对应的 effect， 让她重新执行\n    const depsMap = targetMap.get(target);\n    if(!depsMap) return; // 只是改了属性，这个属性没有在effect中使用\n    const effectsSet=  new Set();\n    const add = (effectsAdd)=>{ // 如果同时有多个 依赖的effect是同一个 还用set做了一个过滤\n        if(effectsAdd){\n            effectsAdd.forEach(effect=>effectsSet.add(effect));\n        }\n    }\n    // 1.如果更改的数组长度 小于依赖收集的长度 要触发重新渲染\n    // 2.如果调用了push方法 或者其他新增数组的方法（必须能改变长度的方法）， 也要触发更新\n    if(key === 'length' && isArray(target)){ // 如果是数组，你改了length\n        depsMap.forEach((dep,key)=>{\n            if(key > newValue || key === 'length'){\n                add(dep); // 更改的数组长度 比收集到的属性的值小\n            }\n        })\n    }else{\n        add(depsMap.get(key));\n        switch(type){\n            case 'add':\n                if(isArray(target) && isIntegerKey(key)){\n                    add(depsMap.get('length')); // 增加属性 需要触发length的依赖收集\n                }\n        }\n    }\n    effectsSet.forEach((effect:any)=>{\n        // 数据变化原则上应该触发对应的effect让他重新执行,如果effect提供了scheduler那么就让这个scheduler执行，不让effect重新执行\n        if(effect.options.schedular){\n            effect.options.schedular(effect)\n        }else{\n            effect();\n        }\n    });\n    // 23 继续\n}\n// [fn1] activeEffect = fn1   proxy.name\n// [fn1,fn2]  activeEffect = fn2   proxy.agre\n// [fn1] activeEffect = fn1 =  Proxy.address:\n// effect(()=>{ // fn1\n//     proxy.name\n//     effect(()=>{ // fn2\n//         proxy.agre\n//     })\n//     Proxy.address:\n// })","import { extend, hasChanged, isArray, isObject, hasOwn, isIntegerKey } from \"@vue/shared\";\nimport { reactive, readonly } from \"./reactive\";\nimport {activeEffect, track, trigger} from './effect'\nfunction createGetter(isReadonly = false, shallow = false) {\n    /**\n     * target 是原来的对象\n     * key 去取什么属性\n     * recevier 代理对象\n     */\n    return function get(target, key, receiver) {\n        // return target[key];\n        // Reflect 就是要后续慢慢替换掉Object对象，一般使用proxy 会配合Reflect\n        const res = Reflect.get(target, key, receiver); // Reflect.ownKey Reflect.defineProperty\n        if (!isReadonly) {\n           track(target,'get',key);\n        }\n        if (shallow) {\n            return res;\n        }\n        if (isObject(res)) { // 懒递归 当我们取值的时候才去做递归代理，如果不取默认值代理一层\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    }\n    // vue3 针对的是对象来进行劫持， 不用改写原来的对象,如果是嵌套，当取值的时候才会代理\n    // vue2 针对的是属性劫持，改写了原来对象，一上来就递归的\n    // vue3 可以对不存在的属性进行获取，也会走get方法, proxy支持数组\n}\nfunction createSetter(shallow = false) {\n    // 针对数组而言 如果调用push方法，就会产生2次处罚 1.给数组新增了一项，同时也更改了长度 2.因为更改了长度再次触发set （第二次的触发是无意义的）\n    return function set(target, key, value, receiver) {\n        const oldValue = target[key]; // 获取老值\n        // target[key] = value; // 如果设置失败 没有返回值\n        // 有一个属性不能被修改 target[key] = value;  不会报错，但是通过Reflect.set 会返回false\n        // 设置属性，可能以前有，还有可能以前没有 （新增和修改）\n        // 如何判断数组是新增还是修改\n       \n        let hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n        const res = Reflect.set(target, key, value, receiver);\n        if(!hadKey){\n            trigger(target,'add',key,value);\n        }else if (hasChanged(oldValue, value)) {\n            trigger(target,'set',key,value,oldValue);\n        }\n     \n        return res\n    }\n}\nconst get = createGetter(); // 不是仅读的也不是浅的\nconst shallowGet = createGetter(false, true)\nconst readonlyGet = createGetter(true);\nconst shallowReadonlyGet = createGetter(true, true);\nconst set = createSetter();\nconst shallowSet = createSetter(true); // readonly没有set\n// new Proxy(target,{})\nexport const mutableHandler = { // reactive中的get和set\n    get,\n    set\n}\nexport const shallowReactiveHandlers = {\n    get: shallowGet,\n    set: shallowSet\n}\nlet readonlySet = {\n    set(target, key) {\n        console.warn(`cannot set ${JSON.stringify(target)} on  key ${key} falied`)\n    }\n}\nexport const readonlyHandlers = extend({\n    get: readonlyGet,\n}, readonlySet)\nexport const shallowReadonlyHanlders = extend({\n    get: shallowReadonlyGet\n}, readonlySet)\n\n// 取值 设置值 ","// 是否是浅的，默认是深度\n\nimport { isObject } from \"@vue/shared\";\nimport { mutableHandler, readonlyHandlers, shallowReactiveHandlers, shallowReadonlyHanlders } from \"./baseHandlers\";\n\n// 是否是仅读的 默认不是仅读的\n\nexport function reactive(target) {\n    return createReactiveObject(target, false, mutableHandler);\n}\nexport function shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers);\n}\nexport function readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers);\n}\nexport function shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHanlders);\n}\n/**\n * \n * @param target 创建代理的目标\n * @param isReadonly 当前是不是仅读的\n * @param baseHandler 针对不同的方式创建不同的代理对象  \n */\n// weakMap(key只能是对象) map(key可以是其他类型)\nconst reactiveMap = new WeakMap(); // 目的是添加缓存\nconst readonlyMap = new WeakMap();\nfunction createReactiveObject(target, isReadonly, baseHandler) {\n    if(!isObject(target)){\n        return target;\n    }\n    const proxyMap = isReadonly? readonlyMap:reactiveMap\n    const existProxy = proxyMap.get(target);\n    if(existProxy){\n        return existProxy;// 如果已经代理过了，那就直接把上次的代理返回就可以的 \n    }\n    // 如果是对象 就做一个代理 new proxy\n    const proxy = new Proxy(target,baseHandler);\n    proxyMap.set(target,proxy);\n    return proxy;\n}\n\n// 数组，对象是如何劫持 effect 的实现 ref的实现。。。","import { hasChanged, isArray, isObject } from \"@vue/shared\";\nimport { track, trigger } from \"./effect\";\nimport { reactive } from \"./reactive\";\n\nexport function ref(value) { // 可以传入对象\n    // 把普通值变成一个引用类型, 让一个普通值也具备响应式的能力\n    return createRef(value)\n}\n\n\nexport function shallowRef(value) {\n    return createRef(value, true)\n}\n\n\n// ts 中实现类的话 私有属性必须要先声明才能使用\nconst convert = (v) => isObject(v) ? reactive(v) : v;\nclass RefImpl { // 以前实现原理 确实是个对象，但是为了识别身份，用了类\n    public _value;\n    public __v_isRef = true // 表示他是一个ref\n    // public rawValue\n    constructor(public rawValue, public shallow) {\n        this._value = shallow ? rawValue : convert(rawValue)\n        // this.rawValue = rawValue\n    }\n    get value() {\n        // 收集依赖\n        track(this, 'get', 'value')\n        return this._value;\n    }\n    set value(newValue) {\n        // 触发依赖\n        if (hasChanged(newValue, this.rawValue)) {\n            this.rawValue = newValue; // 用于下次比对\n            this._value = this.shallow ? newValue : convert(newValue)\n\n            trigger(this, 'set', 'value', newValue)\n        }\n    }\n}\nfunction createRef(value, shallow = false) {\n    return new RefImpl(value, shallow); // 借助类的属性访问器 \n}\n\nclass ObjectRefImpl {\n    public __v_isRef = true;\n    constructor(public target, public key) {\n    }\n    get value() {\n        return this.target[this.key];\n    }\n    set value(newValue) {\n        this.target[this.key] = newValue\n    }\n}\nexport function toRef(target, key) {\n    return new ObjectRefImpl(target, key)\n}\n\nexport function toRefs(target){\n    const res = isArray(target)? new Array(target.length) : {};\n    for(let key in target){\n        res[key] = toRef(target,key)\n    }\n    return res;\n}\n\n// ref 其他方法实现 计算实习\n// effect 和 reactive 和 ref的关系 \n// computed 通过源码调试一遍\n// 把vue3的渲染原理，diff算法","import { isObject } from \"@vue/shared\";\nimport { effect, track, trigger } from \"./effect\";\nclass ComputedRefImpl {\n    public effect;\n    public _value;\n    public _dirty = true\n    constructor(public getter, public setter) {\n        // 返还了 effect的执行权限\n        // 我们传入了scheduler后，下次数据更新，原则上应该让effect重新执行，下次更新会调用scheduler\n        this.effect = effect(getter, {\n            lazy: true, schedular: (effect) => {\n                // 自己来实现逻辑\n                if(!this._dirty){\n                    console.log('用户更改了依赖的属性')\n                    this._dirty = true;  \n                    trigger(this,'get','value');\n                }\n            }\n        })\n    }\n    // 如果用户不去计算属性中取值 就不会执行计算属性的effect\n    get value() {\n        if (this._dirty) {\n            this._value = this.effect();\n            this._dirty = false;\n        }\n        track(this,'get','value')\n        return this._value\n    }\n    set value(newValue) {\n        // 当用户给计算属性设置值的时候会触发 set方法，此时调用计算属性的setter\n        this.setter(newValue)\n    }\n}\nexport function computed(getterOrOptions) {\n    let getter;\n    let setter;\n\n    if (isObject(getterOrOptions)) {\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    } else {\n        getter = getterOrOptions;\n        setter = () => {\n            console.log(`computed not set`)\n        }\n    }\n    return new ComputedRefImpl(getter, setter)\n}","import { isArray, isObject, isString, ShapeFlags } from \"@vue/shared\";\n\n// h('h1',{},'abc');\nexport function createVnode(type, props, children = null) {\n    // 虚拟节点上属性有哪些？ 必须药有的 type , props, children ,key  __v_isVnode\n    const shapeFlag = isString(type) ?\n        ShapeFlags.ELEMENT : isObject(type) ?\n            ShapeFlags.STATEFUL_COMPONENT : 0\n\n    const vnode = {\n        __v_isVnode: true,\n        type, // 对于组件而言 组件的type就是一个对象\n        props,\n        children, // 组件的children是插槽\n        key: props && props.key,\n        el: null, // 对应一个真实的节点\n        shapeFlag,\n        component:null, // 组件的实例\n    }\n    // 等会做diff算法 肯定要有一个老的虚拟节点 （对应着真实的DOM）， 新的虚拟节点。 虚拟节点比对差异，将差异放到真实的节点上\n    normalizeChildren(vnode, children);\n    return vnode; // 返回最后的虚拟节点\n}\nfunction normalizeChildren(vnode, children) { // 将儿子的类型统一记录在 vnode中的shapeFlag\n    let type = 0;\n    if (children == null) { // 没有儿子 不用处理儿子的情况\n\n    } else if (isArray(children)) { // 没有处理对象\n        type = ShapeFlags.ARRAY_CHILDREN\n    } else {\n        type = ShapeFlags.TEXT_CHILDREN \n    }\n    vnode.shapeFlag |= type\n}","import { createVnode } from \"./vnode\";\n\n// 虚拟节点？ 1. 虚拟节点的好处就是可以支持跨平台  2. 如果后续操作可以都在虚拟dom上进行操作，最后一起更新页面，在真实dom之前的一个缓存\nexport function createAppAPI(render) {\n    return (rootComponent, rootProps) => { // createApp  \n        const app = {\n            // 全局的方法例如 app.component  app.directives app.mixin\n            _component: rootComponent, // 为了稍后组件挂载之前可以先校验组件是否有render函数或者模板\n            _props: rootProps,\n            _container: null,\n            mount(container) {\n                // 1. 根据用户传入的组件生成一个虚拟节点\n                const vnode = createVnode(rootComponent, rootProps);\n                app._container = container;\n                // 2. 将虚拟节点变成真实节点，插入到对应的容器中\n                render(vnode, container)\n                // console.log(rootComponent, rootProps, container, rendererOptions)\n            }\n        };\n        return app\n    }\n}","import { hasOwn } from \"@vue/shared\";\n\nexport const componentPublicInstance = {\n    get({ _: instance }, key) {\n        const { setupState, props ,ctx} = instance;\n\n        if (hasOwn(setupState, key)) { // 先自己的状态 在像上下文中查找，在像属性中查找\n            return setupState[key];\n        }else if (hasOwn(ctx, key)) {\n            return ctx[key];\n        } else if (hasOwn(props, key)) {\n            return props[key];\n        }\n    },\n    set({ _: instance }, key, value) {\n        const { setupState, props } = instance;\n        if (hasOwn(setupState, key)) {\n            setupState[key] = value;\n        }  else if (hasOwn(props, key)) {\n            props[key] = value\n        }\n        return true;\n    }\n}","import { hasOwn, isFunction, isObject } from \"@vue/shared\";\nimport { componentPublicInstance } from \"./componentPublicInstance\";\n\nlet uid = 0;\nexport function createComponentInstance(vnode) {\n    const instance = {\n        uid: uid++,\n        vnode: vnode, // 实例上的vnode就是我们处理过的vnode\n        type: vnode.type, // 用户写的组件的内容\n        props: {}, // props就是组件里用户声明过的 \n        attrs: {}, // 用户没用到的props 就会放到attrs中\n        slots: {}, // 组件的是插槽\n        setupState: {}, // setup的返回值\n        proxy: null,\n        emit: null, // 组件通信\n        ctx: {}, // 上下文\n        isMounted: false, // 组件是否挂载\n        subTree: null, // 组件u敌营的渲染内容\n        render: null\n    }\n    instance.ctx = { _: instance }; // 将自己放到了上下文中, 并且在生成环境下+_ 标识不希望用户通过_放到里边的变量\n    return instance;\n}\nexport function setupComponent(instance) {\n    let { props, children } = instance.vnode;\n    // 初始化属性  initProps  ? \n    // 初始化插槽  initSlots  ?\n    instance.props = props;\n    instance.slots = children;\n    instance.proxy = new Proxy(instance.ctx,componentPublicInstance)\n    setupStatefulComponent(instance);\n}\nfunction createSetupContext(instance) { // 根据当前实例获取一个上下文对象\n    return {\n        attrs: instance.attrs,\n        slots: instance.slots,\n        emit: instance.emit,\n        expose: () => { } // 是为了表示组件暴露了哪些方法 ，用户可以通过ref 调用哪些方法\n    }\n}\nfunction setupStatefulComponent(instance) {\n    let Component = instance.type;\n    let { setup } = Component;\n    if (setup) { // 说明用户提供了setup方法\n        let setupContext = createSetupContext(instance);\n        let setupResult = setup(instance.props, setupContext);\n        handleSetupResult(instance, setupResult);\n    } else {\n        finishComponentSetup(instance); // 如果用户没写setup 那么直接用外面的render\n    }\n}\nfunction handleSetupResult(instance, setupResult) {\n    if (isObject(setupResult)) {\n        instance.setupState = setupResult\n    } else if (isFunction(setupResult)) {\n        instance.render = setupResult\n    }\n    //  处理 后可能依旧没有render 1） 用户没写setup  2) 用户写了setup但是什么都没返回\n    finishComponentSetup(instance);\n}\nfunction finishComponentSetup(instance) {\n    let Component = instance.type;\n    if (!instance.render) {\n        if (!Component.render && Component.template) {\n            // 需要将template 变成render函数  compileToFunctions()\n        }\n        instance.render = Component.render\n    }\n    console.log(instance)\n}","import { effect } from \"@vue/reactivity\";\nimport { ShapeFlags } from \"@vue/shared\";\nimport { createAppAPI } from \"./apiCreateApp\"\nimport { createComponentInstance, setupComponent } from \"./component\";\n\n\n// 不在关心是什么平台了\nexport function createRenderer(rendererOptions) { // 稍后会将这个函数，放到runtime-core中\n    const {\n        insert: hostInsert,\n        remove: hostRemove,\n        patchProp: hostPatchProp,\n        createElement: hostCreateElement,\n        createText: hostCreateText,\n        setText: hostSetText,\n        setElementText: hostSetElementText,\n        parentNode: hostParentNode,\n        nextSibling: hostNextSibling,\n    } = rendererOptions\n    const setupRenderEffect = (instance, container) => {\n        effect(function componentEffect() { // 每次状态变化后 都会重新执行effect？ 是第一次还是修改的？  \n            if (!instance.isMounted) {\n                // 组件渲染的内容就是subTree\n                let subTree = instance.subTree = instance.render.call(instance.proxy, instance.proxy); // 调用render， render需要获取数据\n                patch(null, subTree, container);\n                instance.isMounted = true;\n            } else {\n                const prevTree = instance.subTree; // 数据没变的时候的subTree\n                // 在次调用render此时用的是最新数据渲染出来了\n                const nextTree = instance.render.call(instance.proxy, instance.proxy);\n                instance.subTree = nextTree;\n\n                // diff算法\n                patch(prevTree, nextTree, container);\n            }\n\n        })\n    }\n\n\n    const mountComponent = (n2, container) => {\n        // 1.组件的创建 需要产生一个组件的实例，调用组件实例上的setup方法拿到 render函数，在调用render函数，拿到组件对应（要渲染的内容）的虚拟DOM subTree\n        let instance = n2.component = createComponentInstance(n2); // 根据虚拟节点创造一个实例\n\n        // 2.给instance 增加属性， 调用setup ，拿到里面的信息\n        setupComponent(instance);\n\n        // 3.调用render。 每个组件都有一个 effect\n        setupRenderEffect(instance, container);\n\n    }\n    const updateComponent = (n1, n2, container) => {\n\n    }\n    const processComponent = (n1, n2, container) => { // 处理组件\n        if (n1 == null) {\n            mountComponent(n2, container); // 创建组件\n        } else {\n            updateComponent(n1, n2, container); // 更新组件\n        }\n    }\n    function mountChildren(children, container) {\n        for (let i = 0; i < children.length; i++) {\n            patch(null, children[i], container);\n        }\n    }\n    function mountElement(vnode, container,anchor) { // 把虚拟节点变成真实的DOM元素\n        const { type, props, children, shapeFlag } = vnode;\n        let el = vnode.el = hostCreateElement(type); // 对应的是真实DOM元素\n        if (props) {\n            for (let key in props) {\n                hostPatchProp(el, key, null, props[key])\n            }\n        }\n        // 父创建完毕后 需要创建儿子\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n            mountChildren(children, el);\n        } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            hostSetElementText(el, children)\n        }\n        hostInsert(el, container,anchor);\n    }\n\n    const patchProps = (el, oldProps, newProps) => {\n        if (oldProps !== newProps) {\n            for (let key in newProps) {\n                const prev = oldProps[key];\n                const next = newProps[key];\n                if (prev !== next) {\n                    hostPatchProp(el, key, prev, next)\n                }\n            }\n            for (let key in oldProps) {\n                if (!(key in newProps)) {\n                    hostPatchProp(el, key, oldProps[key], null)\n                }\n            }\n        }\n    }\n    const patchChildren = (n1, n2, container) => { // 做两个虚拟的节点的儿子的比较了\n        const c1 = n1.children;\n        const c2 = n2.children; // 儿子之间的对比了\n\n        // 儿子之间的比较 1.一方有儿子 一方没儿子  、 2.以前没儿子 现在有儿子 ， 3.两方都是文本，直接用新的换掉老的 ，4. 最后一个就是直接用方都有儿子 就比对两个儿子的差异\n        const prevShapeFlag = n1.shapeFlag;\n        const shapeFlag = n2.shapeFlag;\n\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            hostSetElementText(container, c2); // 直接干掉以前的\n        } else {\n            // 现在是数组\n            if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) { // 之前的是文本\n                // 两个都是数组\n                patchKeyedChildren(c1, c2,container)\n            } else {\n                // 之前的是文本，现在是数组\n                hostSetElementText(container, '');\n                mountChildren(c2, container)\n            }\n        }\n    }\n    const patchKeyedChildren = (c1, c2, container) => {\n        let i = 0;\n        let e1 = c1.length - 1;\n        let e2 = c2.length - 1;\n\n        // sync from start\n        while (i <= e1 && i <= e2) { // 以短的为主,谁先遍历完毕就终止了\n            const n1 = c1[i];\n            const n2 = c2[i];\n            if (isSameVnode(n1, n2)) { // 是同一个元素 要比较属性，和这两个人的儿子\n                patch(n1, n2, container)\n            }else{\n                break;\n            }\n            i++;\n        }\n        // sync from end\n        while (i <= e1 && i <= e2) {\n            const n1 = c1[e1];\n            const n2 = c2[e2];\n            if (isSameVnode(n1, n2)) { // 是同一个元素 要比较属性，和这两个人的儿子\n                patch(n1, n2, container)\n            }else{\n                break;\n            }\n            e1--;\n            e2--;\n        }\n        // 若果老的少新的多 我需要将新的直接插入即可\n        if(i > e1){ // 无论是头部增加 还是尾部增加 都是这个逻辑\n            if(i<=e2){\n                // 添加进去， 添加到签名 还是后面呢？\n                const nextPos = e2+1; // 如果是向后追加 e2 + 1 肯定大于c2的总长度\n                // 如果是向前追加 e2+1 肯定小于 c2的长度\n                const anchor = nextPos < c2.length?  c2[nextPos].el : null;\n                while (i<=e2) {\n                    patch(null,c2[i++],container,anchor)\n                }\n            }\n        }else if(i> e2){ // 老的多 新的少\n            while(i<=e1){\n                unmount(c1[i++])\n            }\n        }else{ // 乱序比对 （最长递增子序列）\n            // 中间的内容 \n        }\n\n    }\n    const patchElement = (n1, n2, container) => { // 走到这里说明前后两个元素能复用\n        let el = n2.el = n1.el;\n\n        const oldProps = n1.props || {};\n        const newProps = n2.props || {};\n        patchProps(el, oldProps, newProps);\n\n        patchChildren(n1, n2, el)\n\n    }\n    const processElement = (n1, n2, container,anchor) => {\n        if (n1 == null) {\n            mountElement(n2, container,anchor);\n        } else {\n\n            // diff算法 核心\n            patchElement(n1, n2, container);\n        }\n    }\n    const isSameVnode = (n1, n2) => {\n        return n1.type == n2.type && n1.key == n2.key; // 是同一个元素\n    }\n    const unmount = (vnode) => {\n        hostRemove(vnode.el)\n    }\n    const patch = (n1, n2, container,anchor = null) => { // （1） 如果元素和key 不一样则直接删除重来\n\n        // 判断n1 和 n2 是同一个元素吗？ type 和 key\n        if (n1 && !isSameVnode(n1, n2)) { // 不是初始化才比较两个节点是不是同一个节点 \n            unmount(n1);\n            n1 = null; // 如果n1 为空则直接重新渲染\n        }\n\n        // n2 可能是元素 可能是组件， 我需要判断他的具体类型\n        const { shapeFlag } = n2;\n\n        if (shapeFlag & ShapeFlags.ELEMENT) { // 元素的虚拟节点\n            processElement(n1, n2, container,anchor);\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) { // 组件的虚拟节点\n            processComponent(n1, n2, container);\n        }\n    }\n    const render = (vnode, container) => {\n        // 后续更新还有更新逻辑 \n        patch(null, vnode, container);\n    }\n    return {\n        createApp: createAppAPI(render), // 用户调用的createApp 就是通过createAppAPI 来生成的\n        render\n    }\n}","import { isArray, isObject } from \"@vue/shared\";\nimport { createVnode } from \"./vnode\";\n\nfunction isVnode(vnode) {\n    return vnode.__v_isVNode == true\n}\n\nexport function h(type, propsOrChildren, children) {\n    // 第一个一定是类型，第二个参数可能是属性可能是儿子，后面的一定都是儿子, 没有属性的情况只能放数组\n    // 一个的情况可以写文本， 一个type + 一个文本\n    const l = arguments.length;\n    if (l == 2) { // h((div',h('p'))\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n            if (isVnode(propsOrChildren)) {\n                return createVnode(type, null, [propsOrChildren])\n            } else {\n                return createVnode(type, propsOrChildren)\n            }\n        } else {\n            // 是数组\n            return createVnode(type, null, propsOrChildren)\n        }\n    } else {\n        if (l > 3) {\n            children = Array.from(arguments).slice(2)\n        } else if (l === 3 && isVnode(children)) {\n            // 可能是children 是个文本 或者children是个数组\n            children = [children]; // h('div',{},h('p'))  文本在源码里不用变成数组 ，因为文本可以直接innerHTML，如果是元素 ，递归创建\n        }\n        return createVnode(type, propsOrChildren, children)\n    }\n}","export const nodeOps = {\n    // 增 删  改 查询 元素中插入文本  文本的创建  文本元素的内容设置  获取父亲  获取下一个元素\n    createElement: tagName => document.createElement(tagName),\n    remove: child => child.parentNode && child.parentNode.removeChild(child),\n    insert: (child,parent,anchor = null) => parent.insertBefore(child,anchor), // anchor 不存在的时候就是appendChild\n    querySelector:selector => document.querySelector(selector),\n    setElementText:(el,text) => el.textContent = text,\n    createText:text=> document.createTextNode(text),\n    setText: (node,text)=>node.nodeValue = text,\n    parentNode:(node)=>node.parentNode,\n    nextSibling:(node)=>node.nextElementSibling\n}\n\n","\n\nconst patchClass = (el, next) => {\n    if (next == null) {\n        next = ''\n    }\n    el.className = next;\n}\nconst patchStyle = (el, prev, next) => {\n    if (next == null) {\n        el.removeAttribute('style'); // 如果最新的没有样式 直接移除样式就可以了\n    } else {\n        if (prev) {\n            for (let key in prev) {\n                if (next[key] == null) {\n                    el.style[key] = ''\n                }\n            }\n        }\n        // 新的一定要生效\n        for (let key in next) {\n            el.style[key] = next[key];\n        }\n    }\n}\nconst createInvoker = (fn) => {\n    const invoker = (e) => { invoker.value(e) };\n    invoker.value = fn;\n    return invoker\n}\nconst patchEvents = (el, key, next) => { // react中采用的是事件代理，但是vue中直接绑定给元素的\n    // 之前绑定的事件 和之后绑定的不一样如何处理？\n    const invokers = el._vei || (el._vei = {});\n    const exists = invokers[key];\n    if (exists && next) {\n        exists.value = next; // 替换事件 但是不用解绑\n    } else {\n        const eventName = key.toLowerCase().slice(2); // click\n        if (next) {\n            // 绑定事件\n            let invoker = invokers[key] = createInvoker(next);\n            el.addEventListener(eventName, invoker)\n        } else {\n            el.removeEventListener(eventName, exists);\n            invokers[key] = null;\n        }\n    }\n}\nconst patchAttrs = (el, key, next) => {\n    if (next == null) {\n        el.removeAttribute(key);\n    } else {\n        el.setAttribute(key, next);\n    }\n}\n\nexport const patchProp = (el, key, prev, next) => {\n    switch (key) {\n        case 'class': // .className   patchProp(el,'class','xxx',null)\n            patchClass(el, next);\n            break;\n        case 'style': // .style.xxx   patchProp('div','style',{color:'red'},{background:'blue'});\n            patchStyle(el, prev, next);\n            break;\n        default:\n            if (/^on[A-Z]/.test(key)) {\n                // 事件 addEventListener\n                patchEvents(el, key, next);\n            } else {\n                // 其他属性 直接使用setAttribute\n                patchAttrs(el, key, next);\n            }\n    }\n}\n// patchProp('div','style',{color:'red'});\n\n// patchProp('div','style',{color:'red'},{background:'blue',color:red});","\n\n\n// 需要支持dom创建的api 及属性处理的api\n\nimport { createRenderer } from \"@vue/runtime-core\";\nimport { extend } from \"@vue/shared\";\nimport { nodeOps } from \"./nodeOps\";\nimport {patchProp} from './patchProp'\n\n\n// 如果元素一致只是属性发生变化  要做属性的diff算法 \n\n// runtime-dom 主要的作用就是为了抹平平台的差异，不同平台对dom操作方式是不同的， 将api传入到core，core中可以调用这些方法\nconst rendererOptions = extend(nodeOps,{patchProp});\n\n// 1) 用户传入组件和属性 2） 需要创建组件的虚拟节点（diff算法） 3） 将虚拟节点变成真实节点\nexport function createApp(rootComponent,rootProps = null){\n    let app = createRenderer(rendererOptions).createApp(rootComponent,rootProps)\n    let {mount} = app;\n    app.mount = function(container){\n        container = rendererOptions.querySelector(container)\n        container.innerHTML = ''; // 我们在runtime-dom 重写的mount方法，会对容器进行清空\n        mount(container); // 函数劫持， AOP 切片\n    }\n    return app\n}\n\nexport * from '@vue/runtime-core'"],"names":[],"mappings":"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"}