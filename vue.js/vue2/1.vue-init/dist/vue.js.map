{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n\n// html字符串 =》 字符串  _c('div',{id:'app',a:1},'hello')\n\nfunction genProps(attrs) { // [{name:'xxx',value:'xxx'},{name:'xxx',value:'xxx'}]\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') { // color:red;background:blue\n            let styleObj = {};\n            attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function() {\n                styleObj[arguments[1]] = arguments[2]\n            })\n            attr.value = styleObj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) { // element = 1 text = 3\n        return generate(el);\n    } else {\n        let text = el.text;\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`;\n        } else {\n            // 'hello' + arr + 'world'    hello {{arr}} {{aa}} world\n            let tokens = [];\n            let match;\n            let lastIndex = defaultTagRE.lastIndex = 0; // CSS-LOADER 原理一样\n            while (match = defaultTagRE.exec(text)) { // 看有没有匹配到\n                let index = match.index; // 开始索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`); // JSON.stringify()\n                lastIndex = index + match[0].length;\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children; // 获取儿子\n    if (children) {\n        return children.map(c => gen(c)).join(',')\n    }\n    return false;\n}\n\nexport function generate(el) { //  _c('div',{id:'app',a:1},_c('span',{},'world'),_v())\n    // 遍历树 将树拼接成字符串\n    let children = genChildren(el);\n    let code = `_c('${el.tag}',${\n        el.attrs.length? genProps(el.attrs): 'undefined'\n    }${\n        children? `,${children}`:''\n    })`;\n\n    return code;\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名 \nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签的 \nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/; //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n\n// ast (语法层面的描述 js css html) vdom （dom节点）\n\n// html字符串解析成 对应的脚本来触发 tokens  <div id=\"app\"> {{name}}</div>\n// 将解析后的结果 组装成一个树结构  栈\nfunction createAstElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: 1,\n        children: [],\n        parent: null,\n        attrs\n    }\n}\nlet root = null;\nlet stack = [];\nfunction start(tagName, attributes) {\n    let parent = stack[stack.length - 1];\n    let element = createAstElement(tagName, attributes);\n    if (!root) {\n        root = element;\n    }\n    if(parent){\n        element.parent = parent;// 当放入栈中时 继续父亲是谁\n        parent.children.push(element)\n    }\n    stack.push(element);\n}\nfunction end(tagName) {\n    let last = stack.pop();\n    if (last.tag !== tagName) {\n        throw new Error('标签有误');\n    }\n}\nfunction chars(text) {\n    text = text.replace(/\\s/g, \"\");\n    let parent = stack[stack.length - 1];\n    if (text) {\n        parent.children.push({\n            type: 3,\n            text\n        })\n    }\n}\n\nexport function parserHTML(html) {\n    function advance(len) {\n        html = html.substring(len);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            let end;\n            // 如果没有遇到标签结尾就不停的解析\n            let attr;\n\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n                advance(attr[0].length)\n            }\n            if (end) {\n                advance(end[0].length);\n            }\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n    while (html) { // 看要解析的内容是否存在，如果存在就不停的解析\n        let textEnd = html.indexOf('<'); // 当前解析的开头  \n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(html); // 解析开始标签\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue;\n            }\n            const endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n                continue;\n            }\n        }\n        let text; // //  </div>\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            chars(text);\n            advance(text.length);\n        }\n    }\n\n    return root;\n}\n\n\n// 看一下用户是否传入了 , 没传入可能传入的是 template, template如果也没有传递\n// 将我们的html =》 词法解析  （开始标签 ， 结束标签，属性，文本）\n// => ast语法树 用来描述html语法的 stack=[]\n\n// codegen  <div>hello</div>  =>   _c('div',{},'hello')  => 让字符串执行\n// 字符串如果转成代码 eval 好性能 会有作用域问题\n\n// 模板引擎 new Function + with 来实现","import { generate } from './generate';\nimport {parserHTML} from './parser';\n\nexport function compileToFunction(template) {\n    let root = parserHTML(template)\n    \n    // 生成代码 \n    let code = generate(root)\n\n    let render = new Function(`with(this){return ${code}}`); // code 中会用到数据 数据在vm上\n\n    return render;\n    // render(){\n    //     return\n    // }\n    // html=> ast（只能描述语法 语法不存在的属性无法描述） => render函数 + (with + new Function) => 虚拟dom （增加额外的属性） => 生成真实dom\n}\n","export function patch(oldVnode, vnode) {\n    if (oldVnode.nodeType == 1) {\n        // 用vnode  来生成真实dom 替换原本的dom元素\n        const parentElm = oldVnode.parentNode; // 找到他的父亲\n        let elm = createElm(vnode); //根据虚拟节点 创建元素\n        parentElm.insertBefore(elm, oldVnode.nextSibling);\n\n        parentElm.removeChild(oldVnode);\n    }\n}\n\nfunction createElm(vnode) {\n    let { tag, data, children, text, vm } = vnode\n    if (typeof tag === 'string') { // 元素\n        vnode.el = document.createElement(tag); // 虚拟节点会有一个el属性 对应真实节点\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child))\n        });\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el\n}","import { patch } from \"./vdom/patch\";\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function(vnode) {\n        // 既有初始化 又又更新 \n        const vm = this;\n\n        patch(vm.$el, vnode);\n\n\n    }\n}\nexport function mountComponent(vm, el) {\n\n    // 更新函数 数据变化后 会再次调用此函数\n    let updateComponent = () => {\n        // 调用render函数，生成虚拟dom\n        vm._update(vm._render()); // 后续更新可以调用updateComponent方法\n        // 用虚拟dom 生成真实dom\n    }\n    updateComponent();\n\n}","export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val == 'object' && val !== null\n\n}","let oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype);\n// arrayMethods.__proto__ = Array.prototype 继承\n\nlet methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice'\n]\n\nmethods.forEach(method =>{\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\n    arrayMethods[method] = function (...args) { //  args 是参数列表 arr.push(1,2,3)\n        oldArrayPrototype[method].call(this,...args); // arr.push(1,2,3);\n        let inserted;\n        let ob = this.__ob__; // 根据当前数组获取到observer实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args ; // 就是新增的内容\n                break;\n            case 'splice':\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\n        // 更新操作.... todo...\n        if(inserted)  ob.observeArray(inserted)\n\n        // arr.push(1,2)\n        // arr.splice(0,1,xxxx)\n    }\n})\n","import { isObject } from \"../utils\";\nimport { arrayMethods } from \"./array\";\n\n// 1.如果数据是对象 会将对象不停的递归 进行劫持\n// 2.如果是数组，会劫持数组的方法，并对数组中不是基本数据类型的进行检测\n\n// 检测数据变化 类有类型 ， 对象无类型\nclass Observer {\n    constructor(data) { // 对对象中的所有属性 进行劫持\n        Object.defineProperty(data,'__ob__',{\n            value:this,\n            enumerable:false // 不可枚举的\n        })\n        // data.__ob__ = this; // 所有被劫持过的属性都有__ob__ \n        if(Array.isArray(data)){\n            // 数组劫持的逻辑\n            // 对数组原来的方法进行改写， 切片编程  高阶函数\n            data.__proto__ = arrayMethods;\n            // 如果数组中的数据是对象类型，需要监控对象的变化\n            this.observeArray(data);\n        }else{\n            this.walk(data); //对象劫持的逻辑 \n        }\n    }\n    observeArray(data){ // 对我们数组的数组 和 数组中的对象再次劫持 递归了\n        // [{a:1},{b:2}]\n        data.forEach(item=>observe(item))\n    }\n    walk(data) { // 对象\n        Object.keys(data).forEach(key => {\n            defineReactive(data, key, data[key]);\n        })\n    }\n}\n// vue2 会对对象进行遍历 将每个属性 用defineProperty 重新定义 性能差\nfunction defineReactive(data,key,value){ // value有可能是对象\n    observe(value); // 本身用户默认值是对象套对象 需要递归处理 （性能差）\n    Object.defineProperty(data,key,{\n        get(){\n            return value\n        },\n        set(newV){ \n            // todo... 更新视图\n            observe(newV); // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\n            value = newV;\n        }\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return;\n    }\n    if(data.__ob__){\n        return;\n    }\n    // 默认最外层的data必须是一个对象\n    return new Observer(data)\n}","import { observe } from \"./observer/index\"; // node_resolve_plugin\nimport { isFunction } from \"./utils\";\n\nexport function initState(vm) { // 状态的初始化\n    const opts = vm.$options;\n    if (opts.data) {\n        initData(vm);\n    }\n    // if(opts.computed){\n    //     initComputed();\n    // }\n    // if(opts.watch){\n    //     initWatch();\n    // }\n}\n\nfunction proxy(vm,source,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[source][key];\n        },\n        set(newValue){\n            vm[source][key] = newValue\n        }\n    })\n}\nfunction initData(vm) { //\n    let data = vm.$options.data; // vm.$el  vue 内部会对属性检测如果是以$开头 不会进行代理\n    // vue2中会将data中的所有数据 进行数据劫持 Object.defineProperty\n\n    // 这个时候 vm 和 data没有任何关系, 通过_data 进行关联\n\n\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n\n    // 用户去vm.xxx => vm._data.xxx\n    for(let key in data){ // vm.name = 'xxx'  vm._data.name = 'xxx'\n        proxy(vm,'_data',key); \n    }\n\n    observe(data);\n}","import { compileToFunction } from \"./compiler/index\";\nimport { mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\nexport function initMixin(Vue) { // 表示在vue的基础上做一次混合操作\n    Vue.prototype._init = function(options) {\n        // el,data\n        const vm = this; // var that = this;\n       \n        vm.$options = options; // 后面会对options进行扩展操作\n\n        // 对数据进行初始化 watch computed props data ...\n        initState(vm); // vm.$options.data  数据劫持\n\n        if(vm.$options.el){\n            // 将数据挂载到这个模板上\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options\n        el = document.querySelector(el);\n        vm.$el = el;\n        // 把模板转化成 对应的渲染函数 =》 虚拟dom概念 vnode =》 diff算法 更新虚拟dom =》 产生真实节点，更新\n        if(!options.render){ // 没有render用template，目前没render\n            let template = options.template;\n            if(!template && el){ // 用户也没有传递template 就取el的内容作为模板\n                template = el.outerHTML;\n                let render = compileToFunction(template);\n                options.render = render;\n            }\n        }\n        // options.render 就是渲染函数\n        // 调用render方法 渲染成真实dom 替换掉页面的内容\n\n        mountComponent(vm,el); // 组件的挂载流程\n    }\n}\n\n","export function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm, tag, data, data.key, children, undefined);\n}\n\nexport function createTextElement(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, data, key, children, text) {\n    return {\n        vm,\n        tag,\n        data,\n        key,\n        children,\n        text,\n        // .....\n    }\n}","import { createElement, createTextElement } from \"./vdom/index\"\n\nexport function renderMixin(Vue){\n    Vue.prototype._c = function(){ // createElement\n        return createElement(this,...arguments)\n    }  \n    Vue.prototype._v = function (text) { // createTextElement\n        return createTextElement(this,text)\n    }\n    Vue.prototype._s = function(val){ // stringify \n        if(typeof val == 'object') return JSON.stringify(val)\n        return val;\n    }\n    Vue.prototype._render = function(){\n       const vm = this;\n       let render =  vm.$options.render; // 就是我们解析出来的render方法，同时也有可能是用户写的\n       let vnode =  render.call(vm);\n       return vnode;\n    }\n}","import { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./render\";\n\nfunction Vue(options){\n    // options 为用户传入的选项\n    this._init(options); // 初始化操作， 组件\n}\n\n// 扩展原型的\ninitMixin(Vue);\nrenderMixin(Vue); // _render\nlifecycleMixin(Vue); // _update\nexport default Vue;\n\n\n\n// init 主要做了状态的初始化 （数据劫持 对象 、 数组）\n// $mount 找render方法  （template-> render函数  ast => codegen =>字符串）\n// render = with + new Function(codegen) 产生虚拟dom的方法 \n// 虚拟dom -> 真实dom \n// vm._update(vm._render()); 先生成虚拟dom  -》 生成真实的DOM元素\n// 初次渲染"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","styleObj","value","replace","arguments","JSON","stringify","slice","gen","el","type","generate","text","test","tokens","match","lastIndex","exec","index","push","trim","join","genChildren","children","map","c","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tagName","parent","root","stack","start","attributes","element","end","last","pop","Error","chars","parserHTML","html","advance","len","substring","parseStartTag","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","render","Function","patch","oldVnode","vnode","nodeType","parentElm","parentNode","elm","createElm","insertBefore","nextSibling","removeChild","data","vm","document","createElement","forEach","child","appendChild","createTextNode","lifecycleMixin","Vue","prototype","_update","$el","mountComponent","updateComponent","_render","isFunction","val","isObject","oldArrayPrototype","Array","arrayMethods","Object","create","methods","method","args","call","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","opts","$options","initData","proxy","source","newValue","_data","initMixin","_init","options","$mount","querySelector","outerHTML","undefined","createTextElement","renderMixin","_c","_v","_s"],"mappings":"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"}